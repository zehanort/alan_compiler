State 120 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: func-def

    2 func-def: T_id '(' fpar-list ')' ':' r-type local-def-list compound-stmt

    3 fpar-list: %empty
    4          | fpar-def
    5          | fpar-def ',' fpar-list

    6 fpar-def: T_id ':' type
    7         | T_id ':' "reference" type

    8 local-def-list: %empty
    9               | local-def local-def-list

   10 local-def: func-def
   11          | var-def

   12 type: data-type
   13     | data-type '[' ']'

   14 data-type: "int"
   15          | "byte"

   16 r-type: data-type
   17       | "proc"

   18 var-def: T_id ':' data-type ';'
   19        | T_id ':' data-type '[' T_const ']' ';'

   20 compound-stmt: '{' stmt-list '}'

   21 stmt-list: %empty
   22          | stmt stmt-list

   23 stmt: ';'
   24     | l-value '=' expr ';'
   25     | compound-stmt
   26     | func-call ';'
   27     | "if" '(' cond ')' stmt
   28     | "if" '(' cond ')' stmt "else" stmt
   29     | "while" '(' cond ')' stmt
   30     | "return" ';'
   31     | "return" expr ';'

   32 func-call: T_id '(' expr-list ')'

   33 expr-list: %empty
   34          | expr
   35          | expr ',' expr-list

   36 expr: T_const
   37     | T_char
   38     | l-value
   39     | '(' expr ')'
   40     | func-call
   41     | expr '+' expr
   42     | expr '-' expr
   43     | expr '*' expr
   44     | expr '/' expr
   45     | expr '%' expr
   46     | '+' expr
   47     | '-' expr

   48 l-value: T_id
   49        | T_id '[' expr ']'
   50        | T_string

   51 cond: "true"
   52     | "false"
   53     | '(' cond ')'
   54     | '!' cond
   55     | expr "==" expr
   56     | expr "!=" expr
   57     | expr '<' expr
   58     | expr '>' expr
   59     | expr "<=" expr
   60     | expr ">=" expr
   61     | cond '&' cond
   62     | cond '|' cond


Terminals, with rules where they appear

$end (0) 0
'!' (33) 54
'%' (37) 45
'&' (38) 61
'(' (40) 2 27 28 29 32 39 53
')' (41) 2 27 28 29 32 39 53
'*' (42) 43
'+' (43) 41 46
',' (44) 5 35
'-' (45) 42 47
'/' (47) 44
':' (58) 2 6 7 18 19
';' (59) 18 19 23 24 26 30 31
'<' (60) 57
'=' (61) 24
'>' (62) 58
'[' (91) 13 19 49
']' (93) 13 19 49
'{' (123) 20
'|' (124) 62
'}' (125) 20
error (256)
"byte" (258) 15
"else" (259) 28
"false" (260) 52
"if" (261) 27 28
"int" (262) 14
"proc" (263) 17
"reference" (264) 7
"return" (265) 30 31
"while" (266) 29
"true" (267) 51
"==" (268) 55
"!=" (269) 56
"<=" (270) 59
">=" (271) 60
T_id (272) 2 6 7 18 19 32 48 49
T_const (273) 19 36
T_char (274) 37
T_string (275) 50
UMINUS (276)
UPLUS (277)


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
program (44)
    on left: 1, on right: 0
func-def (45)
    on left: 2, on right: 1 10
fpar-list (46)
    on left: 3 4 5, on right: 2 5
fpar-def (47)
    on left: 6 7, on right: 4 5
local-def-list (48)
    on left: 8 9, on right: 2 9
local-def (49)
    on left: 10 11, on right: 9
type (50)
    on left: 12 13, on right: 6 7
data-type (51)
    on left: 14 15, on right: 12 13 16 18 19
r-type (52)
    on left: 16 17, on right: 2
var-def (53)
    on left: 18 19, on right: 11
compound-stmt (54)
    on left: 20, on right: 2 25
stmt-list (55)
    on left: 21 22, on right: 20 22
stmt (56)
    on left: 23 24 25 26 27 28 29 30 31, on right: 22 27 28 29
func-call (57)
    on left: 32, on right: 26 40
expr-list (58)
    on left: 33 34 35, on right: 32 35
expr (59)
    on left: 36 37 38 39 40 41 42 43 44 45 46 47, on right: 24 31 34
    35 39 41 42 43 44 45 46 47 49 55 56 57 58 59 60
l-value (60)
    on left: 48 49 50, on right: 24 38
cond (61)
    on left: 51 52 53 54 55 56 57 58 59 60 61 62, on right: 27 28 29
    53 54 61 62


State 0

    0 $accept: . program $end

    T_id  shift, and go to state 1

    program   go to state 2
    func-def  go to state 3


State 1

    2 func-def: T_id . '(' fpar-list ')' ':' r-type local-def-list compound-stmt

    '('  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: func-def .

    $default  reduce using rule 1 (program)


State 4

    2 func-def: T_id '(' . fpar-list ')' ':' r-type local-def-list compound-stmt

    T_id  shift, and go to state 6

    $default  reduce using rule 3 (fpar-list)

    fpar-list  go to state 7
    fpar-def   go to state 8


State 5

    0 $accept: program $end .

    $default  accept


State 6

    6 fpar-def: T_id . ':' type
    7         | T_id . ':' "reference" type

    ':'  shift, and go to state 9


State 7

    2 func-def: T_id '(' fpar-list . ')' ':' r-type local-def-list compound-stmt

    ')'  shift, and go to state 10


State 8

    4 fpar-list: fpar-def .
    5          | fpar-def . ',' fpar-list

    ','  shift, and go to state 11

    $default  reduce using rule 4 (fpar-list)


State 9

    6 fpar-def: T_id ':' . type
    7         | T_id ':' . "reference" type

    "byte"       shift, and go to state 12
    "int"        shift, and go to state 13
    "reference"  shift, and go to state 14

    type       go to state 15
    data-type  go to state 16


State 10

    2 func-def: T_id '(' fpar-list ')' . ':' r-type local-def-list compound-stmt

    ':'  shift, and go to state 17


State 11

    5 fpar-list: fpar-def ',' . fpar-list

    T_id  shift, and go to state 6

    $default  reduce using rule 3 (fpar-list)

    fpar-list  go to state 18
    fpar-def   go to state 8


State 12

   15 data-type: "byte" .

    $default  reduce using rule 15 (data-type)


State 13

   14 data-type: "int" .

    $default  reduce using rule 14 (data-type)


State 14

    7 fpar-def: T_id ':' "reference" . type

    "byte"  shift, and go to state 12
    "int"   shift, and go to state 13

    type       go to state 19
    data-type  go to state 16


State 15

    6 fpar-def: T_id ':' type .

    $default  reduce using rule 6 (fpar-def)


State 16

   12 type: data-type .
   13     | data-type . '[' ']'

    '['  shift, and go to state 20

    $default  reduce using rule 12 (type)


State 17

    2 func-def: T_id '(' fpar-list ')' ':' . r-type local-def-list compound-stmt

    "byte"  shift, and go to state 12
    "int"   shift, and go to state 13
    "proc"  shift, and go to state 21

    data-type  go to state 22
    r-type     go to state 23


State 18

    5 fpar-list: fpar-def ',' fpar-list .

    $default  reduce using rule 5 (fpar-list)


State 19

    7 fpar-def: T_id ':' "reference" type .

    $default  reduce using rule 7 (fpar-def)


State 20

   13 type: data-type '[' . ']'

    ']'  shift, and go to state 24


State 21

   17 r-type: "proc" .

    $default  reduce using rule 17 (r-type)


State 22

   16 r-type: data-type .

    $default  reduce using rule 16 (r-type)


State 23

    2 func-def: T_id '(' fpar-list ')' ':' r-type . local-def-list compound-stmt

    T_id  shift, and go to state 25

    $default  reduce using rule 8 (local-def-list)

    func-def        go to state 26
    local-def-list  go to state 27
    local-def       go to state 28
    var-def         go to state 29


State 24

   13 type: data-type '[' ']' .

    $default  reduce using rule 13 (type)


State 25

    2 func-def: T_id . '(' fpar-list ')' ':' r-type local-def-list compound-stmt
   18 var-def: T_id . ':' data-type ';'
   19        | T_id . ':' data-type '[' T_const ']' ';'

    '('  shift, and go to state 4
    ':'  shift, and go to state 30


State 26

   10 local-def: func-def .

    $default  reduce using rule 10 (local-def)


State 27

    2 func-def: T_id '(' fpar-list ')' ':' r-type local-def-list . compound-stmt

    '{'  shift, and go to state 31

    compound-stmt  go to state 32


State 28

    9 local-def-list: local-def . local-def-list

    T_id  shift, and go to state 25

    $default  reduce using rule 8 (local-def-list)

    func-def        go to state 26
    local-def-list  go to state 33
    local-def       go to state 28
    var-def         go to state 29


State 29

   11 local-def: var-def .

    $default  reduce using rule 11 (local-def)


State 30

   18 var-def: T_id ':' . data-type ';'
   19        | T_id ':' . data-type '[' T_const ']' ';'

    "byte"  shift, and go to state 12
    "int"   shift, and go to state 13

    data-type  go to state 34


State 31

   20 compound-stmt: '{' . stmt-list '}'

    "if"      shift, and go to state 35
    "return"  shift, and go to state 36
    "while"   shift, and go to state 37
    T_id      shift, and go to state 38
    T_string  shift, and go to state 39
    ';'       shift, and go to state 40
    '{'       shift, and go to state 31

    $default  reduce using rule 21 (stmt-list)

    compound-stmt  go to state 41
    stmt-list      go to state 42
    stmt           go to state 43
    func-call      go to state 44
    l-value        go to state 45


State 32

    2 func-def: T_id '(' fpar-list ')' ':' r-type local-def-list compound-stmt .

    $default  reduce using rule 2 (func-def)


State 33

    9 local-def-list: local-def local-def-list .

    $default  reduce using rule 9 (local-def-list)


State 34

   18 var-def: T_id ':' data-type . ';'
   19        | T_id ':' data-type . '[' T_const ']' ';'

    '['  shift, and go to state 46
    ';'  shift, and go to state 47


State 35

   27 stmt: "if" . '(' cond ')' stmt
   28     | "if" . '(' cond ')' stmt "else" stmt

    '('  shift, and go to state 48


State 36

   30 stmt: "return" . ';'
   31     | "return" . expr ';'

    T_id      shift, and go to state 38
    T_const   shift, and go to state 49
    T_char    shift, and go to state 50
    T_string  shift, and go to state 39
    '+'       shift, and go to state 51
    '-'       shift, and go to state 52
    '('       shift, and go to state 53
    ';'       shift, and go to state 54

    func-call  go to state 55
    expr       go to state 56
    l-value    go to state 57


State 37

   29 stmt: "while" . '(' cond ')' stmt

    '('  shift, and go to state 58


State 38

   32 func-call: T_id . '(' expr-list ')'
   48 l-value: T_id .
   49        | T_id . '[' expr ']'

    '('  shift, and go to state 59
    '['  shift, and go to state 60

    $default  reduce using rule 48 (l-value)


State 39

   50 l-value: T_string .

    $default  reduce using rule 50 (l-value)


State 40

   23 stmt: ';' .

    $default  reduce using rule 23 (stmt)


State 41

   25 stmt: compound-stmt .

    $default  reduce using rule 25 (stmt)


State 42

   20 compound-stmt: '{' stmt-list . '}'

    '}'  shift, and go to state 61


State 43

   22 stmt-list: stmt . stmt-list

    "if"      shift, and go to state 35
    "return"  shift, and go to state 36
    "while"   shift, and go to state 37
    T_id      shift, and go to state 38
    T_string  shift, and go to state 39
    ';'       shift, and go to state 40
    '{'       shift, and go to state 31

    $default  reduce using rule 21 (stmt-list)

    compound-stmt  go to state 41
    stmt-list      go to state 62
    stmt           go to state 43
    func-call      go to state 44
    l-value        go to state 45


State 44

   26 stmt: func-call . ';'

    ';'  shift, and go to state 63


State 45

   24 stmt: l-value . '=' expr ';'

    '='  shift, and go to state 64


State 46

   19 var-def: T_id ':' data-type '[' . T_const ']' ';'

    T_const  shift, and go to state 65


State 47

   18 var-def: T_id ':' data-type ';' .

    $default  reduce using rule 18 (var-def)


State 48

   27 stmt: "if" '(' . cond ')' stmt
   28     | "if" '(' . cond ')' stmt "else" stmt

    "false"   shift, and go to state 66
    "true"    shift, and go to state 67
    T_id      shift, and go to state 38
    T_const   shift, and go to state 49
    T_char    shift, and go to state 50
    T_string  shift, and go to state 39
    '+'       shift, and go to state 51
    '-'       shift, and go to state 52
    '!'       shift, and go to state 68
    '('       shift, and go to state 69

    func-call  go to state 55
    expr       go to state 70
    l-value    go to state 57
    cond       go to state 71


State 49

   36 expr: T_const .

    $default  reduce using rule 36 (expr)


State 50

   37 expr: T_char .

    $default  reduce using rule 37 (expr)


State 51

   46 expr: '+' . expr

    T_id      shift, and go to state 38
    T_const   shift, and go to state 49
    T_char    shift, and go to state 50
    T_string  shift, and go to state 39
    '+'       shift, and go to state 51
    '-'       shift, and go to state 52
    '('       shift, and go to state 53

    func-call  go to state 55
    expr       go to state 72
    l-value    go to state 57


State 52

   47 expr: '-' . expr

    T_id      shift, and go to state 38
    T_const   shift, and go to state 49
    T_char    shift, and go to state 50
    T_string  shift, and go to state 39
    '+'       shift, and go to state 51
    '-'       shift, and go to state 52
    '('       shift, and go to state 53

    func-call  go to state 55
    expr       go to state 73
    l-value    go to state 57


State 53

   39 expr: '(' . expr ')'

    T_id      shift, and go to state 38
    T_const   shift, and go to state 49
    T_char    shift, and go to state 50
    T_string  shift, and go to state 39
    '+'       shift, and go to state 51
    '-'       shift, and go to state 52
    '('       shift, and go to state 53

    func-call  go to state 55
    expr       go to state 74
    l-value    go to state 57


State 54

   30 stmt: "return" ';' .

    $default  reduce using rule 30 (stmt)


State 55

   40 expr: func-call .

    $default  reduce using rule 40 (expr)


State 56

   31 stmt: "return" expr . ';'
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79
    ';'  shift, and go to state 80


State 57

   38 expr: l-value .

    $default  reduce using rule 38 (expr)


State 58

   29 stmt: "while" '(' . cond ')' stmt

    "false"   shift, and go to state 66
    "true"    shift, and go to state 67
    T_id      shift, and go to state 38
    T_const   shift, and go to state 49
    T_char    shift, and go to state 50
    T_string  shift, and go to state 39
    '+'       shift, and go to state 51
    '-'       shift, and go to state 52
    '!'       shift, and go to state 68
    '('       shift, and go to state 69

    func-call  go to state 55
    expr       go to state 70
    l-value    go to state 57
    cond       go to state 81


State 59

   32 func-call: T_id '(' . expr-list ')'

    T_id      shift, and go to state 38
    T_const   shift, and go to state 49
    T_char    shift, and go to state 50
    T_string  shift, and go to state 39
    '+'       shift, and go to state 51
    '-'       shift, and go to state 52
    '('       shift, and go to state 53

    $default  reduce using rule 33 (expr-list)

    func-call  go to state 55
    expr-list  go to state 82
    expr       go to state 83
    l-value    go to state 57


State 60

   49 l-value: T_id '[' . expr ']'

    T_id      shift, and go to state 38
    T_const   shift, and go to state 49
    T_char    shift, and go to state 50
    T_string  shift, and go to state 39
    '+'       shift, and go to state 51
    '-'       shift, and go to state 52
    '('       shift, and go to state 53

    func-call  go to state 55
    expr       go to state 84
    l-value    go to state 57


State 61

   20 compound-stmt: '{' stmt-list '}' .

    $default  reduce using rule 20 (compound-stmt)


State 62

   22 stmt-list: stmt stmt-list .

    $default  reduce using rule 22 (stmt-list)


State 63

   26 stmt: func-call ';' .

    $default  reduce using rule 26 (stmt)


State 64

   24 stmt: l-value '=' . expr ';'

    T_id      shift, and go to state 38
    T_const   shift, and go to state 49
    T_char    shift, and go to state 50
    T_string  shift, and go to state 39
    '+'       shift, and go to state 51
    '-'       shift, and go to state 52
    '('       shift, and go to state 53

    func-call  go to state 55
    expr       go to state 85
    l-value    go to state 57


State 65

   19 var-def: T_id ':' data-type '[' T_const . ']' ';'

    ']'  shift, and go to state 86


State 66

   52 cond: "false" .

    $default  reduce using rule 52 (cond)


State 67

   51 cond: "true" .

    $default  reduce using rule 51 (cond)


State 68

   54 cond: '!' . cond

    "false"   shift, and go to state 66
    "true"    shift, and go to state 67
    T_id      shift, and go to state 38
    T_const   shift, and go to state 49
    T_char    shift, and go to state 50
    T_string  shift, and go to state 39
    '+'       shift, and go to state 51
    '-'       shift, and go to state 52
    '!'       shift, and go to state 68
    '('       shift, and go to state 69

    func-call  go to state 55
    expr       go to state 70
    l-value    go to state 57
    cond       go to state 87


State 69

   39 expr: '(' . expr ')'
   53 cond: '(' . cond ')'

    "false"   shift, and go to state 66
    "true"    shift, and go to state 67
    T_id      shift, and go to state 38
    T_const   shift, and go to state 49
    T_char    shift, and go to state 50
    T_string  shift, and go to state 39
    '+'       shift, and go to state 51
    '-'       shift, and go to state 52
    '!'       shift, and go to state 68
    '('       shift, and go to state 69

    func-call  go to state 55
    expr       go to state 88
    l-value    go to state 57
    cond       go to state 89


State 70

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   55 cond: expr . "==" expr
   56     | expr . "!=" expr
   57     | expr . '<' expr
   58     | expr . '>' expr
   59     | expr . "<=" expr
   60     | expr . ">=" expr

    "=="  shift, and go to state 90
    "!="  shift, and go to state 91
    "<="  shift, and go to state 92
    ">="  shift, and go to state 93
    '>'   shift, and go to state 94
    '<'   shift, and go to state 95
    '+'   shift, and go to state 75
    '-'   shift, and go to state 76
    '*'   shift, and go to state 77
    '/'   shift, and go to state 78
    '%'   shift, and go to state 79


State 71

   27 stmt: "if" '(' cond . ')' stmt
   28     | "if" '(' cond . ')' stmt "else" stmt
   61 cond: cond . '&' cond
   62     | cond . '|' cond

    '|'  shift, and go to state 96
    '&'  shift, and go to state 97
    ')'  shift, and go to state 98


State 72

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | '+' expr .

    $default  reduce using rule 46 (expr)


State 73

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   47     | '-' expr .

    $default  reduce using rule 47 (expr)


State 74

   39 expr: '(' expr . ')'
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79
    ')'  shift, and go to state 99


State 75

   41 expr: expr '+' . expr

    T_id      shift, and go to state 38
    T_const   shift, and go to state 49
    T_char    shift, and go to state 50
    T_string  shift, and go to state 39
    '+'       shift, and go to state 51
    '-'       shift, and go to state 52
    '('       shift, and go to state 53

    func-call  go to state 55
    expr       go to state 100
    l-value    go to state 57


State 76

   42 expr: expr '-' . expr

    T_id      shift, and go to state 38
    T_const   shift, and go to state 49
    T_char    shift, and go to state 50
    T_string  shift, and go to state 39
    '+'       shift, and go to state 51
    '-'       shift, and go to state 52
    '('       shift, and go to state 53

    func-call  go to state 55
    expr       go to state 101
    l-value    go to state 57


State 77

   43 expr: expr '*' . expr

    T_id      shift, and go to state 38
    T_const   shift, and go to state 49
    T_char    shift, and go to state 50
    T_string  shift, and go to state 39
    '+'       shift, and go to state 51
    '-'       shift, and go to state 52
    '('       shift, and go to state 53

    func-call  go to state 55
    expr       go to state 102
    l-value    go to state 57


State 78

   44 expr: expr '/' . expr

    T_id      shift, and go to state 38
    T_const   shift, and go to state 49
    T_char    shift, and go to state 50
    T_string  shift, and go to state 39
    '+'       shift, and go to state 51
    '-'       shift, and go to state 52
    '('       shift, and go to state 53

    func-call  go to state 55
    expr       go to state 103
    l-value    go to state 57


State 79

   45 expr: expr '%' . expr

    T_id      shift, and go to state 38
    T_const   shift, and go to state 49
    T_char    shift, and go to state 50
    T_string  shift, and go to state 39
    '+'       shift, and go to state 51
    '-'       shift, and go to state 52
    '('       shift, and go to state 53

    func-call  go to state 55
    expr       go to state 104
    l-value    go to state 57


State 80

   31 stmt: "return" expr ';' .

    $default  reduce using rule 31 (stmt)


State 81

   29 stmt: "while" '(' cond . ')' stmt
   61 cond: cond . '&' cond
   62     | cond . '|' cond

    '|'  shift, and go to state 96
    '&'  shift, and go to state 97
    ')'  shift, and go to state 105


State 82

   32 func-call: T_id '(' expr-list . ')'

    ')'  shift, and go to state 106


State 83

   34 expr-list: expr .
   35          | expr . ',' expr-list
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79
    ','  shift, and go to state 107

    $default  reduce using rule 34 (expr-list)


State 84

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   49 l-value: T_id '[' expr . ']'

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79
    ']'  shift, and go to state 108


State 85

   24 stmt: l-value '=' expr . ';'
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79
    ';'  shift, and go to state 109


State 86

   19 var-def: T_id ':' data-type '[' T_const ']' . ';'

    ';'  shift, and go to state 110


State 87

   54 cond: '!' cond .
   61     | cond . '&' cond
   62     | cond . '|' cond

    $default  reduce using rule 54 (cond)


State 88

   39 expr: '(' expr . ')'
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   55 cond: expr . "==" expr
   56     | expr . "!=" expr
   57     | expr . '<' expr
   58     | expr . '>' expr
   59     | expr . "<=" expr
   60     | expr . ">=" expr

    "=="  shift, and go to state 90
    "!="  shift, and go to state 91
    "<="  shift, and go to state 92
    ">="  shift, and go to state 93
    '>'   shift, and go to state 94
    '<'   shift, and go to state 95
    '+'   shift, and go to state 75
    '-'   shift, and go to state 76
    '*'   shift, and go to state 77
    '/'   shift, and go to state 78
    '%'   shift, and go to state 79
    ')'   shift, and go to state 99


State 89

   53 cond: '(' cond . ')'
   61     | cond . '&' cond
   62     | cond . '|' cond

    '|'  shift, and go to state 96
    '&'  shift, and go to state 97
    ')'  shift, and go to state 111


State 90

   55 cond: expr "==" . expr

    T_id      shift, and go to state 38
    T_const   shift, and go to state 49
    T_char    shift, and go to state 50
    T_string  shift, and go to state 39
    '+'       shift, and go to state 51
    '-'       shift, and go to state 52
    '('       shift, and go to state 53

    func-call  go to state 55
    expr       go to state 112
    l-value    go to state 57


State 91

   56 cond: expr "!=" . expr

    T_id      shift, and go to state 38
    T_const   shift, and go to state 49
    T_char    shift, and go to state 50
    T_string  shift, and go to state 39
    '+'       shift, and go to state 51
    '-'       shift, and go to state 52
    '('       shift, and go to state 53

    func-call  go to state 55
    expr       go to state 113
    l-value    go to state 57


State 92

   59 cond: expr "<=" . expr

    T_id      shift, and go to state 38
    T_const   shift, and go to state 49
    T_char    shift, and go to state 50
    T_string  shift, and go to state 39
    '+'       shift, and go to state 51
    '-'       shift, and go to state 52
    '('       shift, and go to state 53

    func-call  go to state 55
    expr       go to state 114
    l-value    go to state 57


State 93

   60 cond: expr ">=" . expr

    T_id      shift, and go to state 38
    T_const   shift, and go to state 49
    T_char    shift, and go to state 50
    T_string  shift, and go to state 39
    '+'       shift, and go to state 51
    '-'       shift, and go to state 52
    '('       shift, and go to state 53

    func-call  go to state 55
    expr       go to state 115
    l-value    go to state 57


State 94

   58 cond: expr '>' . expr

    T_id      shift, and go to state 38
    T_const   shift, and go to state 49
    T_char    shift, and go to state 50
    T_string  shift, and go to state 39
    '+'       shift, and go to state 51
    '-'       shift, and go to state 52
    '('       shift, and go to state 53

    func-call  go to state 55
    expr       go to state 116
    l-value    go to state 57


State 95

   57 cond: expr '<' . expr

    T_id      shift, and go to state 38
    T_const   shift, and go to state 49
    T_char    shift, and go to state 50
    T_string  shift, and go to state 39
    '+'       shift, and go to state 51
    '-'       shift, and go to state 52
    '('       shift, and go to state 53

    func-call  go to state 55
    expr       go to state 117
    l-value    go to state 57


State 96

   62 cond: cond '|' . cond

    "false"   shift, and go to state 66
    "true"    shift, and go to state 67
    T_id      shift, and go to state 38
    T_const   shift, and go to state 49
    T_char    shift, and go to state 50
    T_string  shift, and go to state 39
    '+'       shift, and go to state 51
    '-'       shift, and go to state 52
    '!'       shift, and go to state 68
    '('       shift, and go to state 69

    func-call  go to state 55
    expr       go to state 70
    l-value    go to state 57
    cond       go to state 118


State 97

   61 cond: cond '&' . cond

    "false"   shift, and go to state 66
    "true"    shift, and go to state 67
    T_id      shift, and go to state 38
    T_const   shift, and go to state 49
    T_char    shift, and go to state 50
    T_string  shift, and go to state 39
    '+'       shift, and go to state 51
    '-'       shift, and go to state 52
    '!'       shift, and go to state 68
    '('       shift, and go to state 69

    func-call  go to state 55
    expr       go to state 70
    l-value    go to state 57
    cond       go to state 119


State 98

   27 stmt: "if" '(' cond ')' . stmt
   28     | "if" '(' cond ')' . stmt "else" stmt

    "if"      shift, and go to state 35
    "return"  shift, and go to state 36
    "while"   shift, and go to state 37
    T_id      shift, and go to state 38
    T_string  shift, and go to state 39
    ';'       shift, and go to state 40
    '{'       shift, and go to state 31

    compound-stmt  go to state 41
    stmt           go to state 120
    func-call      go to state 44
    l-value        go to state 45


State 99

   39 expr: '(' expr ')' .

    $default  reduce using rule 39 (expr)


State 100

   41 expr: expr . '+' expr
   41     | expr '+' expr .
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr

    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 41 (expr)


State 101

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   42     | expr '-' expr .
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr

    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 42 (expr)


State 102

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   43     | expr '*' expr .
   44     | expr . '/' expr
   45     | expr . '%' expr

    $default  reduce using rule 43 (expr)


State 103

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   44     | expr '/' expr .
   45     | expr . '%' expr

    $default  reduce using rule 44 (expr)


State 104

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   45     | expr '%' expr .

    $default  reduce using rule 45 (expr)


State 105

   29 stmt: "while" '(' cond ')' . stmt

    "if"      shift, and go to state 35
    "return"  shift, and go to state 36
    "while"   shift, and go to state 37
    T_id      shift, and go to state 38
    T_string  shift, and go to state 39
    ';'       shift, and go to state 40
    '{'       shift, and go to state 31

    compound-stmt  go to state 41
    stmt           go to state 121
    func-call      go to state 44
    l-value        go to state 45


State 106

   32 func-call: T_id '(' expr-list ')' .

    $default  reduce using rule 32 (func-call)


State 107

   35 expr-list: expr ',' . expr-list

    T_id      shift, and go to state 38
    T_const   shift, and go to state 49
    T_char    shift, and go to state 50
    T_string  shift, and go to state 39
    '+'       shift, and go to state 51
    '-'       shift, and go to state 52
    '('       shift, and go to state 53

    $default  reduce using rule 33 (expr-list)

    func-call  go to state 55
    expr-list  go to state 122
    expr       go to state 83
    l-value    go to state 57


State 108

   49 l-value: T_id '[' expr ']' .

    $default  reduce using rule 49 (l-value)


State 109

   24 stmt: l-value '=' expr ';' .

    $default  reduce using rule 24 (stmt)


State 110

   19 var-def: T_id ':' data-type '[' T_const ']' ';' .

    $default  reduce using rule 19 (var-def)


State 111

   53 cond: '(' cond ')' .

    $default  reduce using rule 53 (cond)


State 112

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   55 cond: expr "==" expr .

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 55 (cond)


State 113

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   56 cond: expr "!=" expr .

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 56 (cond)


State 114

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   59 cond: expr "<=" expr .

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 59 (cond)


State 115

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   60 cond: expr ">=" expr .

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 60 (cond)


State 116

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   58 cond: expr '>' expr .

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 58 (cond)


State 117

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   57 cond: expr '<' expr .

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 57 (cond)


State 118

   61 cond: cond . '&' cond
   62     | cond . '|' cond
   62     | cond '|' cond .

    '&'  shift, and go to state 97

    $default  reduce using rule 62 (cond)


State 119

   61 cond: cond . '&' cond
   61     | cond '&' cond .
   62     | cond . '|' cond

    $default  reduce using rule 61 (cond)


State 120

   27 stmt: "if" '(' cond ')' stmt .
   28     | "if" '(' cond ')' stmt . "else" stmt

    "else"  shift, and go to state 123

    "else"    [reduce using rule 27 (stmt)]
    $default  reduce using rule 27 (stmt)


State 121

   29 stmt: "while" '(' cond ')' stmt .

    $default  reduce using rule 29 (stmt)


State 122

   35 expr-list: expr ',' expr-list .

    $default  reduce using rule 35 (expr-list)


State 123

   28 stmt: "if" '(' cond ')' stmt "else" . stmt

    "if"      shift, and go to state 35
    "return"  shift, and go to state 36
    "while"   shift, and go to state 37
    T_id      shift, and go to state 38
    T_string  shift, and go to state 39
    ';'       shift, and go to state 40
    '{'       shift, and go to state 31

    compound-stmt  go to state 41
    stmt           go to state 124
    func-call      go to state 44
    l-value        go to state 45


State 124

   28 stmt: "if" '(' cond ')' stmt "else" stmt .

    $default  reduce using rule 28 (stmt)
